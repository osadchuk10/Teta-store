<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link
  href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Raleway:ital,wght@0,100..900;1,100..900&display=swap"
  rel="stylesheet"
>
<style>
  .custom-featured__products {
    display: flex;
  }
  .custom-featured__image img {
    width: 100%;
    height: 400px;
    object-fit: cover;
  }
  .custom-featured__success-message {
    display: none;
  }
  .custom-featured__collection-list {
    display: flex;
    justify-content: space-between;
    margin: 20px 0;
    border: 2.5px solid black;
    border-radius: 64px;
    font-family: 'Montserrat', sans-serif;
    font-weight: 500;
    font-size: 20px;
    padding: 8px 6px;
  }
  .custom-featured__collection {
    padding: 10px 8px;
    border-radius: 64px;
  }
  .custom-featured__heading {
    text-align: center;
    font-size: 48px;
    font-family: 'Montserrat', sans-serif;
    font-weight: 600;
  }
  .custom-featured__swiper-pagination {
    position: absolute;
    top: 0;
    right: 0;
    display: flex;
    gap: 10px;
    z-index: 1000;
    margin-top: 22px;
  }

  .swiper-button-prev,
  .swiper-button-next {
    position: static;
    width: 40px;
    height: 40px;
    background: rgba(0, 0, 0, 0.5);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #fcfcfc;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .swiper-button-prev::after,
  .swiper-button-next::after {
    font-size: 24px;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
  }
  .swiper-button-prev::after {
    content: '\2190';
  }
  .swiper-button-next::after {
    content: '\2192';
  }

  .swiper-button-disabled {
    opacity: 0.5;
    pointer-events: none;
  }
  .swiper-wrapper {
    padding-top: 22px;
  }
  .custom-featured__info {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .custom-featured__add-to-cart {
    width: 100%;
  }
  .custom-button {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50px;
    border: none;
    padding: 16px 28px 16px 28px;
  }
  .custom-featured__product-info {
    font-family: 'Montserrat', sans-serif;
    margin-right: 10px;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    margin-bottom: 25px;
  }
  .custom-featured__add-to-cart--click{
    cursor: pointer;
  }
  .custom-featured__add-to-cart--click,
  .custom-featured__add-to-cart--disabled {
    padding: 10px 0;
    width: 100%;
    margin-top: auto;
  }

  .swiper-slide {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
  }
  .custom-featured__button-label {
    margin-left: 10px;
  }
  .custom-featured__options {
    border: none;
    padding: 5px 10px;
    font-family: 'Montserrat', sans-serif;
    border-radius: 10px;
  }
  .custom-featured__title {
    font-family: 'Montserrat', sans-serif;
    font-weight: 700;
    font-size: 20px;
    text-decoration: none;
  }
  .custom-featured__product-info a {
    text-decoration: none;
  }
  .custom-featured__description {
    font-size: 16px;
    font-weight: 500;
  }
  .custom-button {
    color: #fcfcfc;
  }
  .custom-button svg path {
    fill: #fcfcfc;
  }
  .custom-featured__options{
    background: #ECEAE0;
  }
  .custom-featured__price{
    font-weight: 700;
  }
  .custom-featured__image img{
    border-radius: 16px;
  }
  .custom-featured__add-to-cart--disabled{
    opacity:0.6;
  }
  @media screen and (max-width: 768px) {
    .custom-featured__collection-list{
      flex-direction: column;
      align-items: center;
      border-radius: 30px;
    }
    .custom-featured__collection-list .custom-featured__collection{
      width: 90%;
      text-align: center;
    } 
        
  }
</style>
{% style %}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
  .custom-featured__heading,
  .custom-featured__collection{
    color: {{ section.settings.text_color }};
  }
  .custom-featured__collection-list{
    border: 2.5px solid {{ section.settings.text_color }};
  }

  .custom-featured__collection {
    color: {{ section.settings.text_color }};
  }
  .custom-featured__collection--active{
    background: {{ section.settings.text_color }};
    color: #E9EBCE;

  }
  .custom-featured__title, .custom-featured__description, .custom-featured__options{
    color: {{ section.settings.text_color }};
  }
  .custom-button{
    background: {{ section.settings.buttons_color }};
  }
  .custom-featured__price{
    color: {{ section.settings.buttons_color }};
  }
  .swiper-button-next, .swiper-button-prev{
    background: {{ section.settings.buttons_color }};
  }
{% endstyle %}

<div
  class="custom-featured custom-featured__swiper-section section-custom-featured-product-items page-width section-{{ section.id }}-padding"
  id="custom-featured-section-id-{{ section.id }}"
  data-time-rotate="{{ section.settings.time_rotate }}"
  data-autorotate="{{ section.settings.auto_rotate }}"
  data-desktop-items="{{ section.settings.desktop_quantity }}"
  data-tablet-items="{{ section.settings.tablet_quantity }}"
  data-mobile-items="{{ section.settings.mobile_quantity }}"
>
  <div class="custom-featured__heading">
    {{ section.settings.heading }}
  </div>
  <div class="custom-featured__collection-list">
    {% for block in section.blocks %}
      {% case block.type %}
        {% when 'Collection' %}
          <div
            class="custom-featured__collection {% if forloop.first %}custom-featured__collection--active{% endif %}"
            data-collection-id="{{ block.settings.collection.id }}"
          >
            {% if block.settings.collection != blank %}
              {{ block.settings.collection.title }}
            {% else %}
              Collection-{{ forloop.index }}
            {% endif %}
          </div>
      {% endcase %}
    {% endfor %}
  </div>
  <div class="custom-featured__product-list">
    {% for block in section.blocks %}
      {% case block.type %}
        {% when 'Collection' %}
          {% if block.settings.collection %}
            <div
              class="custom-featured__products"
              data-collection-id="{{ block.settings.collection.id }}"
              {% if forloop.first %}
                style="display: flex;"
              {% else %}
                style="display: none;"
              {% endif %}
            >
              {% if block.settings.collection != blank %}
                <div class="swiper" data-index="{{ forloop.index }}">
                  <div class="swiper-wrapper">
                    {% for product in block.settings.collection.products %}
                      <div class="custom-featured__product swiper-slide" data-product-id="{{ product.id }}">
                        <div class="custom-featured__image">
                          {%- capture srcset -%}
                          {{ product.featured_image | image_url: width: 165 }} 165w,
                          {{ product.featured_image | image_url: width: 360 }} 360w,
                          {{ product.featured_image | image_url: width: 533 }} 533w,
                          {{ product.featured_image | image_url: width: 720 }} 720w,
                          {{ product.featured_image | image_url: width: 940 }} 940w,
                          {{ product.featured_image | image_url: width: 1066 }} 1066w,
                          {{ product.featured_image | image_url: width: 1600 }} 1600w
                          {%- endcapture -%}
                          <a href="{{ product.url | url_escape}}">
                            {{
                              product.featured_image
                              | image_url: width: 400
                              | image_tag:
                                srcset: srcset,
                                sizes: '(min-width: 1200px) 400px, (min-width: 750px) 50vw, 100vw',
                                alt: product.title,
                                loading: 'lazy'
                            }}
                          </a>
                        </div>
                        <div class="custom-featured__product-info">
                          <a href="{{ product.url | url_escape}}">
                            <div class="custom-featured__title">{{ product.title }}</div>
                          </a>
                          <div class="custom-featured__description">
                            {{ product.description | strip_html | truncate: 25 }}
                          </div>
                          <div class="custom-featured__info">
                            <div class="custom-featured__price" id="product-price-{{ product.id }}">
                              {{ product.price | money_without_trailing_zeros }}
                            </div>

                            {% if product.variants.size > 1 %}
                              <select class="custom-featured__options" data-product-id="{{ product.id }}">
                                {% for variant in product.variants %}
                                  <option
                                    value="{{ variant.id }}"
                                    data-price="{{ variant.price }}"
                                    data-available="{{ variant.available }}"
                                    data-image="{{ variant.image.src | img_url: '600x' }}"
                                    data-currency="{{ localization.country.currency.symbol }}"
                                  >
                                    {{ variant.title }}
                                  </option>
                                {% endfor %}
                              </select>
                            {% endif %}
                          </div>
                          <div class="custom-featured__add-to-cart">
                            <button
                              class="custom-button {% if product.available %} custom-featured__add-to-cart--click {% else %} custom-featured__add-to-cart--disabled {% endif %}"
                              data-product-id="{{ product.id }}"
                              data-variant-id="{{ product.selected_or_first_available_variant.id }}"
                            >
                              {% if product.available %}
                                <span> {% render 'custom-cart-icon' %} </span>
                              {% else %}
                                <span> {% render 'custom-sold-out' %} </span>
                              {% endif -%}
                              <span class="custom-featured__button-label">
                                {%- if product.available %}
                                  Add to cart
                                {% else %}
                                  Sold Out
                                {% endif -%}
                              </span>
                            </button>
                          </div>
                          <div class="custom-featured__success-message">Added to the cart</div>
                        </div>
                      </div>
                    {% endfor %}
                  </div>
                  <div class="custom-featured__swiper-pagination">
                    <div class="swiper-button-prev" data-index="{{ forloop.index }}"><span></span></div>
                    <div class="swiper-button-next" data-index="{{ forloop.index }}"><span></span></div>
                  </div>
                </div>
              {% else %}
                <div class="custom-featured__product-placeholder">
                  <div class="swiper">
                    <div class="swiper-wrapper">
                      {% for i in (1..section.settings.desktop_quantity) %}
                        {% assign placeholder_image = 'product-' | append: i %}
                        <div class="custom-featured__product swiper-slide" data-product-id="{{ product.id }}">
                          {{ placeholder_image | placeholder_svg_tag: 'placeholder-svg' }}
                        </div>
                      {% endfor %}
                    </div>
                  </div>
                </div>
              {% endif %}
            </div>
          {% endif %}
      {% endcase %}
    {% endfor %}
  </div>
</div>

<script defer src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<script>
  function updateOptions(section) {
    section.querySelectorAll('.custom-featured__options').forEach((select) => {
      select.addEventListener('change', function (event) {
        const selectedVariantId = event.target.value;
        const productId = event.target.getAttribute('data-product-id');
        const selectedOption = event.target.querySelector(`option[value="${selectedVariantId}"]`);
        const selectedPrice = selectedOption.getAttribute('data-price');
        const storeCurrency = selectedOption.getAttribute('data-currency');

        const priceContainer = section.querySelector(`#product-price-${productId}`);
        priceContainer.textContent = storeCurrency + selectedPrice / 100;

        const button = section.querySelector(
          `.custom-featured__product[data-product-id="${productId}"] .custom-featured__add-to-cart--click`
        );

        button.setAttribute('data-variant-id', selectedVariantId);
      });
    });
  }

  function setChoosenCollectionqwe(section) {
    const collectionTitles = section.querySelectorAll('.custom-featured__collection');
    const productLists = section.querySelectorAll('.custom-featured__products');

    collectionTitles.forEach((title) => {
      title.addEventListener('click', function () {
        const collectionId = this.getAttribute('data-collection-id');

        collectionTitles.forEach((t) => t.classList.remove('custom-featured__collection--active'));
        productLists.forEach((list) => (list.style.display = 'none'));

        this.classList.add('custom-featured__collection--active');
        section.querySelector(`.custom-featured__products[data-collection-id="${collectionId}"]`).style.display =
          'flex';
      });
    });
  }

  function updateSwiper(section) {
    let timeRotate = section.getAttribute('data-time-rotate');
    let desktopItems = Number(section.getAttribute('data-desktop-items'));
    let tabletItems = Number(section.getAttribute('data-tablet-items'));
    let mobileItems = Number(section.getAttribute('data-mobile-items'));
    let auto_rotate = section.getAttribute('data-autorotate') === 'true';

    const swiperContainers = section.querySelectorAll('.swiper');

    if (!swiperContainers.length) return;

    swiperContainers.forEach((swiperContainer) => {
      let swiperIndex = swiperContainer.getAttribute('data-index');

      let totalSlides = swiperContainer.querySelectorAll('.swiper-slide').length;

      let prevEl = null;
      let nextEl = null;

      section.querySelectorAll('.swiper-button-prev').forEach((prev) => {
        if (prev.getAttribute('data-index') === swiperIndex) {
          prevEl = prev;
        }
      });

      section.querySelectorAll('.swiper-button-next').forEach((next) => {
        if (next.getAttribute('data-index') === swiperIndex) {
          nextEl = next;
        }
      });

      let actualDesktopItems = Math.min(desktopItems, totalSlides);
      let actualTabletItems = Math.min(tabletItems, totalSlides);
      let actualMobileItems = Math.min(mobileItems, totalSlides);

      const swiperConfig = {
        direction: 'horizontal',
        slidesPerView: actualDesktopItems,
        navigation: {
          prevEl: prevEl,
          nextEl: nextEl,
        },
        loop: totalSlides >= desktopItems * 2,
        breakpoints: {
          320: { slidesPerView: actualMobileItems },
          768: { slidesPerView: actualTabletItems },
          1024: { slidesPerView: actualDesktopItems },
        },
      };

      if (auto_rotate) {
        swiperConfig.autoplay = {
          delay: Number(timeRotate) * 1000,
          disableOnInteraction: false,
        };
      }

      new Swiper(swiperContainer, swiperConfig);
    });
  }

  function updateCart(section) {
    const addToCartButtons = section.querySelectorAll('.custom-featured__add-to-cart--click');

    addToCartButtons.forEach((button) => {
      button.addEventListener('click', function () {
        const variantId = button.getAttribute('data-variant-id');
        const successMessage = button.closest('.custom-featured__add-to-cart').nextElementSibling;

        addToCart(variantId, button, successMessage);
      });
    });

    function addToCart(variantId, button, successMessage) {
      let formData = {
        items: [{ id: variantId, quantity: 1 }],
      };

      fetch(window.Shopify.routes.root + 'cart/add.js', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData),
      })
        .then((response) => response.json())
        .then(() => {
          button.style.display = 'none';
          successMessage.style.display = 'block';

          setTimeout(() => {
            successMessage.style.display = 'none';
            button.style.display = 'inline-block';
          }, 5000);

          return fetch('/cart.js');
        })
        .then((response) => response.json())
        .then((cart) => {
          const cartBubble = document.querySelector('#cart-icon-bubble .cart-count-bubble span');

          if (cartBubble) {
            cartBubble.textContent = cart.item_count;
          } else if (cart.item_count > 0) {
            const cartIcon = document.querySelector('#cart-icon-bubble');
            if (cartIcon) {
              const bubble = document.createElement('div');
              bubble.classList.add('cart-count-bubble');
              bubble.innerHTML = `<span aria-hidden="true">${cart.item_count}</span><span class="visually-hidden">${cart.item_count} item</span>`;
              cartIcon.appendChild(bubble);
            }
          }
        })
        .catch((error) => console.error('Error:', error));
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const uniqueSection = document.querySelector('#custom-featured-section-id-{{ section.id }}');
    updateSwiper(uniqueSection);
    setChoosenCollectionqwe(uniqueSection);
    updateCart(uniqueSection);
    updateOptions(uniqueSection);
  });

  document.addEventListener('shopify:section:load', function (event) {
    const uniqueSection = document.querySelector('#custom-featured-section-id-{{ section.id }}');
    updateSwiper(uniqueSection);
    setChoosenCollectionqwe(uniqueSection);
    updateCart(uniqueSection);
    updateOptions(uniqueSection);
  });

  document.addEventListener('shopify:section:select', function (event) {
    const uniqueSection = document.querySelector('#custom-featured-section-id-{{ section.id }}');
    updateSwiper(uniqueSection);
    setChoosenCollectionqwe(uniqueSection);
    updateCart(uniqueSection);
    updateOptions(uniqueSection);
  });
</script>

{% schema %}
{
  "name": "Custom Featured Products",
  "settings": [
    {
      "type": "color",
      "id": "text_color",
      "label": "Section Text Color",
      "default": "#000"
    },
    {
      "type": "color",
      "id": "buttons_color",
      "label": "Section Buttons Color",
      "default": "#000"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Custom Featured Products"
    },
    {
      "type": "checkbox",
      "id": "auto_rotate",
      "default": true,
      "label": "Auto Rotate Items"
    },
    {
      "type": "range",
      "id": "time_rotate",
      "label": "Seconds for changing slides",
      "info": "If you don't see the changes click Save button",
      "min": 3,
      "max": 15,
      "step": 1,
      "unit": "sec",
      "default": 5
    },
    {
      "type": "select",
      "id": "desktop_quantity",
      "label": "Items on Desktop",
      "default": "4",
      "info": "If you don't see the changes click Save button",
      "options": [
        {
          "value": "2",
          "label": "2"
        },
        {
          "value": "3",
          "label": "3"
        },
        {
          "value": "4",
          "label": "4"
        },
        {
          "value": "5",
          "label": "5"
        },
        {
          "value": "6",
          "label": "6"
        }
      ]
    },
    {
      "type": "select",
      "id": "tablet_quantity",
      "label": "Items on Tablet",
      "default": "2",
      "info": "If you don't see the changes click Save button",
      "options": [
        {
          "value": "2",
          "label": "2"
        },
        {
          "value": "3",
          "label": "3"
        }
      ]
    },
    {
      "type": "select",
      "id": "mobile_quantity",
      "label": "Items on Mobile",
      "default": "1",
      "info": "If you don't see the changes click Save button",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ]
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "Collection",
      "name": "Collection",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Custom Featured Products",
      "blocks": [
        {
          "type": "Collection"
        },
        {
          "type": "Collection"
        },
        {
          "type": "Collection"
        },
        {
          "type": "Collection"
        }
      ]
    }
  ]
}
{% endschema %}
